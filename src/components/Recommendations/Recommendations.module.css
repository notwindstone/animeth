.similar {
    width: rem(400px);

    @media screen and (max-width: rem(1024px)) {
        width: 100%;
    }

    @media screen and (max-width: rem(750px)) {
        padding-left: rem(16px);
        padding-right: rem(16px);
    }
}

.recommendationWrapper {
    position: relative;

    @mixin hover {
        .menuButton {
            opacity: 1;
        }
    }
}

.aspectRatio {
    flex: 3;
    flex-shrink: 0;
    max-width: rem(168px);

    @media screen and (max-width: rem(750px)) {
        width: 100%;
        max-width: 100%;
        flex-shrink: 0;
    }
}

.container {
    padding: 0;
    position: relative;
}

.scoreBadgeWrapper, .episodesBadgeWrapper, .menuButton {
    position: absolute;
}

.scoreBadgeWrapper, .episodesBadgeWrapper {
    display: flex;
}

.episodesBadgeWrapper {
    bottom: rem(4px);
    right: rem(4px);

    @media screen and (max-width: rem(750px)) {
        bottom: rem(8px);
        right: rem(8px);
        transform: scale(1.5) translateX(-8px) translateY(-4px);
    }
}

.scoreBadgeWrapper {
    bottom: rem(4px);
    left: rem(4px);

    @media screen and (max-width: rem(750px)) {
        bottom: rem(8px);
        left: rem(8px);
        transform: scale(1.5) translateX(8px) translateY(-4px);
    }
}

.menuButton {
    transition: 150ms ease;
    display: grid;
    place-content: center;
    width: rem(32px);
    height: rem(32px);
    top: 0;
    right: 0;
    opacity: 0;
    border-radius: var(--mantine-radius-md);
    background: var(--anisun-background-color);

    @mixin hover {
        background: var(--mantine-color-default-hover);
    }

    @media screen and (max-width: rem(750px)) {
        opacity: 1;
        top: auto;
        bottom: rem(12px);
        right: rem(12px);
        transform: scale(1.5);
        color: var(--anisun-text-contrast-color);
    }
}

.group {
    user-select: none;
    transition: 150ms ease;
    border-radius: var(--mantine-radius-md);
    padding: rem(4px);
    gap: rem(8px);
    cursor: pointer;

    @media screen and (max-width: rem(750px)) {
        flex-direction: column;
    }
}

.stack {
    flex: 4;
    gap: rem(4px);

    @media screen and (max-width: rem(900px)) {
        gap: rem(2px);
    }
}

.title {
    text-wrap: balance;
    color: var(--anisun-text-contrast-color);
    font-weight: 500;
    font-size: rem(14px);
    line-height: rem(20px);

    @media screen and (max-width: rem(750px)) {
        font-size: rem(20px);
        line-height: rem(26px);
    }
}

.text {
    font-size: rem(12px);
    line-height: rem(18px);

    @media screen and (max-width: rem(750px)) {
        font-size: rem(16px);
        line-height: rem(22px);
    }
}

.segmentedControlWrapper {
    overflow-x: auto;
    max-width: rem(320px);
    padding-bottom: rem(4px);

    @media screen and (max-width: rem(1024px)) {
        max-width: 100%;
    }
}

.segmentedControlRoot {
    background: none;
}

.segmentedControlIndicator {
    background: var(--anisun-text-contrast-color);
}

.segmentedControlLabel:where([data-active]) {
    color: var(--anisun-background-color);;
}